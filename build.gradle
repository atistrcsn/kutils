buildscript { scriptHandler ->
    apply from: "$rootProject.rootDir/gradle/repositories.gradle", to: scriptHandler
    ext.kotlin_version = '1.2.31'
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply from: "$rootDir/gradle/kotlin.gradle"
apply from: "$rootDir/gradle/repositories.gradle"
apply from: "$rootDir/gradle/idea.gradle"
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group 'io.github.atistrcsn'
version '1.0.1'
jar.baseName 'kutils'

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = 1.8
        suppressWarnings = true
    }
}

dependencies {
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5"
    implementation "io.github.microutils:kotlin-logging:1.4.9"
    implementation "org.slf4j:slf4j-api:1.7.25"

    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
}

publishing {
    publications {
        KutilsBintrayPublication(MavenPublication) {
            from components.java
            groupId group
            artifactId module.name
            version project.version
            artifact(sourcesJar) {
                classifier = 'sources'
            }
        }
    }
}

jar {
    exclude("**/resources/rebel.xml")
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

bintray {
    user = bintray_user
    key = bintray_key
    publications = ['KutilsBintrayPublication']
    pkg {
        repo = 'public'
        name = 'kutils'
        desc = 'Kotlin starter, kotlin utilities'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/atistrcsn/kutils.git'
        labels = ['kotlin', 'utils']
        publicDownloadNumbers = true
        githubRepo = 'atistrcsn/kutils' //Optional Github repository
        githubReleaseNotesFile = 'README.md' //Optional Github readme file
        version {
            name = project.version
            desc = bintray.pkg.desc
            released = new Date()
            vcsTag = project.version
            gpg {
                sign = true
            }
        }
    }
}

task cleanPubLocal() {
    group 'kutils'
    dependsOn 'clean'
    dependsOn 'assemble'
    dependsOn 'publishToMavenLocal'
    tasks.findByName('assemble').mustRunAfter 'clean'
    tasks.findByName('publishToMavenLocal').mustRunAfter 'assemble'
}

task cleanBuildPublishArtifactory() {
    group 'kutils'
    dependsOn 'cleanPubLocal'
    dependsOn 'bintrayUpload'
    tasks.findByName('bintrayUpload').mustRunAfter 'cleanPubLocal'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8.1'
}